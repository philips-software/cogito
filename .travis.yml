language: swift
os: osx
osx_image: xcode10
env:
  global:
    # Ruby setup
    - BUNDLE_GEMFILE=.ruby-dependencies/Gemfile
    # Code coverage key
    - secure: QiKA+JoGk6C7PFdphqS6k9hC6p1TO7cBBhoF3NMlGo2mlwxoVnagtUpoM5kmUW2PoG49LMGxQI/oerQMSqY/dJa0df9UlffMZTs6UIBdxbbeg7Rp/gh0DMMQQGG2mokBLM8Ivm/tFxlf8Y8CHHSWgBWjKTvnlX21nTvYgqqiCfcEmae/kJgBq9M/w9cQNXFnQJm6FsTrekESBlX4CzmyWxeLWVGEvgsXTwg6FsNVIZFuiSJPflLja5X7MzizZX73jvKRHCts49/ftO1TL6ii5DjuYBOzILg9Zlo01Y+2AgTYAX8dou+wUDbHfPsK66trB4wblDmqyB9dcWG+2oc8cMEGqyrIAFP5wEvuVqkujPHBBc7gYJNXBCFDS/Qy/Xmobj4YbSPnw9gnYK+Ba5nM89/zJOQUnozWcitlfkFnho+PMEYrciYnTOJsnT2MV/GGc1B7ccT8HrAkU8jQQgwh+i56TgzXR7KJ0g40eEKK98RLcSjrVOy35NInrnSy7WawpydseLOxRtjLZPnKLrAOtMJ2zbjx8xnAldzLxK9lwsEQGBBAcieDoJheEwUVIOEHW7gyIGOMBoqY8zLWdcpKgy/luOxLdXtI4IxvqMtHOtvkC1BbH6mAbfeBmmCAcHfDlZ9ldnR647kKr+TPvyKMHqvZX16E+UAOVEnJ9QNEiRc=
# Only build the master branch, not feature branches. It will still build PRs
branches:
  only:
  - master
before_install:
  # Use bundler 2.0
  - gem update --system
  - gem install bundler
  # Use recent NodeJS
  # Temporarily use 11.10.1, see links below for more info
  # https://github.com/facebook/jest/issues/8069 and https://stackoverflow.com/a/55060832
  - nvm install 11.10.1
  - nvm use 11.10.1
  # Use recent Yarn
  - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.13.0
  - export PATH="$HOME/.yarn/bin:$PATH"
  # Install Code Climate reporter
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-darwin-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build
install:
  # Install NodeJS dependencies, compile contracts and build packages
  - yarn setup:dev
  # Build Gatsby homepage)
  - yarn build:homepage
  # Install fastlane for iOS builds
  - (cd workspaces/cogito-ios-app && bundle install)
  - (cd workspaces/telepath-ios && bundle install)
  - (cd workspaces/cogito-attestations-ios && bundle install)
script:
  # Run NodeJS tests
  - yarn test --runInBand
  # Run iOS app tests
  - (cd workspaces/cogito-ios-app && bundle exec fastlane tests)
  - (cd workspaces/telepath-ios && bundle exec fastlane tests)
  - (cd workspaces/cogito-attestations-ios && bundle exec fastlane tests)
after_success:
  # Code coverage reports for iOS
  - (cd workspaces/cogito-ios-app && bundle exec slather coverage -x)
  - (cd workspaces/telepath-ios && bundle exec slather coverage -x)
  - (cd workspaces/cogito-attestations-ios && bundle exec slather coverage -x)
  # Convert coverage to Code Climate format
  - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.nodejs.json
  - ./cc-test-reporter format-coverage -t cobertura -o coverage/codeclimate.cogito-ios.json workspaces/cogito-ios-app/cobertura.xml
  - ./cc-test-reporter format-coverage -t cobertura -o coverage/codeclimate.telepath-ios.json workspaces/telepath-ios/cobertura.xml
  - ./cc-test-reporter format-coverage -t cobertura -o coverage/codeclimate.attestations-ios.json workspaces/cogito-attestations-ios/cobertura.xml
  # Combine code coverage reports
  - ./cc-test-reporter sum-coverage --parts 4 coverage/codeclimate.*.json
  # Upload test coverage to Code Climate
  - ./cc-test-reporter upload-coverage
